PRGNAME     = stella

EXESUFFIX 		= .elf
CC          	= nspire-gcc
CCP          	= nspire-g++
LD          	= nspire-g++

CFLAGS = -std=c++11 -O2

# add SDL dependencies
SDL_LIB     = $(TOOLCHAIN)/lib
SDL_INCLUDE = $(TOOLCHAIN)/include 
CFLAGS += -I./emucore -I./common -I./opendingux

LDFLAGS     = -lm -lstdc++ 

# Files to be compiled
SRCDIR   =  ./emucore ./common ./opendingux .
VPATH    = $(SRCDIR)
SRC_C    = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SRC_CP   = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.cpp))
OBJ_C    = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CP   = $(notdir $(patsubst %.cpp, %.o, $(SRC_CP)))
OBJS     = $(OBJ_C) $(OBJ_CP)

# Rules to make executable

all: $(PRGNAME)$(EXESUFFIX) gen mkprg

$(PRGNAME)$(EXESUFFIX): $(OBJS)  
	$(LD) $(CFLAGS) -o $(PRGNAME)$(EXESUFFIX) $^ $(LDFLAGS)

$(OBJ_C) : %.o : %.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJ_CP) : %.o : %.cpp
	$(CCP) $(CFLAGS) -c -o $@ $<
	
gen:
	genzehn --input $(PRGNAME)$(EXESUFFIX) --output $(PRGNAME).t --compress
	
mkprg:
	make-prg $(PRGNAME).t $(PRGNAME).tns
	rm $(PRGNAME).t
	rm $(PRGNAME)$(EXESUFFIX)

clean:
	rm -f $(PRGNAME)$(EXESUFFIX) *.o
